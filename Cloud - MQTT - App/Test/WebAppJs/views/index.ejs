<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>MY APP</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
    <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
    <script type="text/javascript" language="javascript">

        var mqtt;
        var reconnectTimeout = 2000;
        ///var host = "localhost";
        var host = "192.168.1.67"
        //var port = 707;
        var port = 8080;

        var nrTrain = 0;

        /*console.log(mqtt)

        const options = {
            port: port,
            host: host,
            connectTimeout: 4000,
            // Auth
            clientId: "Test123",
            username: 'ClientJs',
            password: 'test000',
        }
        const client = mqtt.connect(options)
        client.on('connect', function () {
            console.log('Connected')
            client.subscribe('trainProjectWork/1/liveData/#', function (err) {
                if (!err) {
                    //client.publish('test', 'Hello mqtt')
                }
            })
        })

        client.on('message', function (topic, message) {
            // message is Buffer
            console.log(message.toString())
            //client.end()
        })
        */

        function onConnect() {
            alert("Connected");
            console.log("Connected with Mqtt");
            //mqtt.subscribe("trainProjectWork/" + nrTrain + "/liveData/#");
            mqtt.subscribe("trainProjectWork/#");
        }

        function onFailure(msg) {
            console.log("Connetion Attempt to Host " + host + " Failed");
            console.log(msg)
            setTimeout(MQTTConnect, reconnectTimeout);
        }

        function onMessageArrived(msg) {
            console.log("Sub Mess")
            console.log(msg.payloadString);
            console.log(msg.destinationName);
            mqtt.disconnect();
        }

        function MQTTConnect(nrTrainArg) {
            nrTrain = nrTrainArg
            console.log("Connected to " + host);
            var clientId = "ClientJs-" + uuidv4();
            console.log(clientId);
            mqtt = new Paho.MQTT.Client(host, port,clientId)
            var option = {
                timeout: 3,
                onSuccess: onConnect,
                onFailure: onFailure,
                userName: clientId,
                password: "test000"
            }
            mqtt.onMessageArrived = onMessageArrived;
            mqtt.connect(option);
        }

        function uuidv4() {
            return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
            );
        }

    </script>

    <script>
        var nrTrainForMethod = <%= nrTrain %>
        MQTTConnect(nrTrainForMethod)
    </script>

</head>

<body>

    Nr. Train: <%= nrTrain %>
        <br> Nr. Wagon: <%= arrayNrWagon.length %>
            <ul class="quotes">
                <% for(var i=0; i<arrayNrWagon.length; i++) {%>
                    <li class="quote"> <span>
                            <%= arrayNrWagon[i] %>
                        </span> <span>
                            <%= nrTrain %>
                        </span> </li>
                    <% } %>
            </ul>

</body>

</html>